{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","cookies","Cookies","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_handleKeyDown","e","keyCode","setState","prevState","bo","populateCanvas","console","log","timer","current","start","side","beep","before","max","Math","configurationOpen","instructionsOpen","progressOpen","handleInputChange","event","defineProperty","target","name","Number","value","updateTime","setTime","stop","updateWindowWidth","windowWidth","ppcm","document","body","scrollWidth","documentElement","offsetWidth","clientWidth","distance","delta","round","updateDistance","state","getCookie","height","smallLength","shift","time","ac","AudioContext","React","createRef","progress","get","set","title","addEventListener","vol","freq","duration","v","createOscillator","u","createGain","connect","frequency","type","destination","gain","currentTime","canvas","refs","ctx","getContext","offset","width","stereogram","createImageData","floor","random","pad","center","buildStereograms","data","putImageData","imageData","smallX","smallY","i","length","x","y","_this2","react_default","a","createElement","className","ref","color","Timer","initialTime","direction","startImmediately","checkpoints","callback","today","Date","toISOString","slice","JSON","stringify","Fragment","Minutes","Seconds","lib_default","isOpen","onRequestClose","contentLabel","persistCookies","defaultValue","onBlur","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4cfef8a1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Modal from 'react-modal';\nimport Timer from 'react-compound-timer';\nimport Cookies from 'universal-cookie';\n\nconst cookies = new Cookies();\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            delta: this.getCookie('delta') || 22,\n            bo: 0,\n            max: 0,\n            instructionsOpen: true,\n            configurationOpen: false,\n            progressOpen: false,\n            distance: this.getCookie('distance') || 40,\n            height: this.getCookie('height') || 500,\n            smallLength: this.getCookie('smallLength') || 100,\n            shift: this.getCookie('shift') || 16,\n            time: this.getCookie('time') || 10\n        };\n        this.windowWidth = this.getCookie('windowWidth') || 30;\n        this.distance = this.getCookie('distance') || 40;\n        this.ppcm = this.getCookie('ppcm') || 56;\n        this.side = 0;\n        this.before = false;\n        this.ac = new AudioContext();\n        this.timer = React.createRef();\n        this.progress = cookies.get('progress') || \"{}\";\n    }\n\n    getCookie(name) {\n        return Number(cookies.get(name));\n    }\n\n    persistCookies() {\n        cookies.set('delta', this.state.delta);\n        cookies.set('distance', this.state.distance);\n        cookies.set('height', this.state.height);\n        cookies.set('smallLength', this.state.smallLength);\n        cookies.set('shift', this.state.shift);\n        cookies.set('time', this.state.time);\n        cookies.set('windowWidth', this.windowWidth);\n        cookies.set('distance', this.distance);\n        cookies.set('ppcm', this.ppcm);\n    }\n\n    componentDidMount() {\n        document.title=\"Convergence Insufficiency Trainer\";\n        document.addEventListener(\"keydown\", this._handleKeyDown);\n        this.populateCanvas();\n    }\n\n    _handleKeyDown = (e) => {\n        switch(e.keyCode) {\n            case 32:\n                this.setState((prevState, props) => {\n                    return { bo: prevState.bo - .5 };\n                });\n                this.populateCanvas();\n                break;\n            case 37:\n            case 38:\n            case 39:\n            case 40:\n                console.log(this.timer);\n                this.timer.current.start();\n                if (this.side == e.keyCode) {\n                    this.beep(100, 520, 200);\n                    if (this.before) {\n                        this.before = false;\n                        this.setState((prevState, props) => {\n                            return { bo: prevState.bo + .5,\n                                     max: Math.max(prevState.bo + .5, prevState.max)\n                            };\n                        });\n                    } else {\n                        this.before = true;\n                    }\n                } else {\n                    this.beep(100, 220, 200);\n                    if (this.before) {\n                        this.before = false;\n                    } else {\n                        this.before = true;\n                        this.setState((prevState, props) => {\n                            return { bo: prevState.bo - .5 };\n                        });\n                    }\n                }\n                this.populateCanvas();\n                break;\n            case 67:\n                this.setState({configurationOpen: true});\n                break;\n            case 73:\n                this.setState({instructionsOpen: true});\n                break;\n            case 80:\n                this.setState({progressOpen: true});\n            default:\n                break;\n        }\n    }\n\n    beep(vol, freq, duration){\n        var v=this.ac.createOscillator();\n        var u=this.ac.createGain();\n        v.connect(u);\n        v.frequency.value=freq;\n        v.type=\"square\";\n        u.connect(this.ac.destination);\n        u.gain.value=vol*0.01;\n        v.start(this.ac.currentTime);\n        v.stop(this.ac.currentTime+duration*0.001);\n    }\n\n    populateCanvas() {\n        if (this.state.bo < 0) {\n            this.setState((prevState, props) => {\n                return { bo: 0 };\n            });\n        }\n\n        const canvas = this.refs.canvas;\n        const ctx = canvas.getContext(\"2d\");\n\n        var offset = Math.round(this.state.bo * this.state.delta);\n        var width = this.state.height + offset;\n\n        canvas.width = width;\n        canvas.height = this.state.height;\n        var stereogram = ctx.createImageData(width, this.state.height);\n\n        this.side = Math.floor(Math.random() * 4) + 37;\n\n        var pad = this.state.height / 10\n        var center = this.state.height / 2 - this.state.smallLength / 2\n\n        switch(this.side) {\n            case 37:\n                // left\n                this.buildStereograms(stereogram.data, width, offset, pad, center);\n                break;\n            case 38:\n                // up\n                this.buildStereograms(stereogram.data, width, offset, center, pad);\n                break;\n            case 39:\n                // right\n                this.buildStereograms(stereogram.data, width, offset, this.state.height - this.state.smallLength - pad, center);\n                break;\n            case 40:\n                // down\n                this.buildStereograms(stereogram.data, width, offset, center, this.state.height - this.state.smallLength - pad);\n        }\n\n        ctx.putImageData(stereogram, 0, 0);\n    }\n\n    buildStereograms(imageData, width, bo, smallX, smallY) {\n        for (var i = 0; i < imageData.length; i+=4) {\n            var x = i/4 % width;\n            var y = Math.floor((i/4) / width);\n\n            var center = (width - bo) / 2;\n\n            if (x < (width - bo)) {\n                if ((center - 7) < x && x < (center + 7) && (center - 7) < y && y < (center + 7)) {\n                    imageData[i] = 255;\n                } else if ((center - 10) < x && x < (center + 10) && (center - 10) < y && y < (center + 10)) {\n                    imageData[i] = 0;\n                } else {\n                    imageData[i] = Math.round(Math.random()) * 255;\n                }\n            } else {\n                imageData[i] = 0;\n            }\n\n            if (x < bo) {\n                imageData[i + 2] = 0;\n            } else {\n                if ((x > smallX + bo) && (x < smallX + this.state.smallLength + bo)\n                    && (y > smallY) && (y < smallY + this.state.smallLength)) {\n                    imageData[i + 2] = imageData[i - bo * 4 - 4 * this.state.shift];\n                } else {\n                    imageData[i + 2] = imageData[i - bo * 4];\n                }\n            }\n            imageData[i + 1] = 0;\n            imageData[i + 3] = 255;\n        }\n    }\n\n    handleInputChange = (event) => {\n        this.setState({\n            [event.target.name]: Number(event.target.value)\n        });\n        this.populateCanvas();\n    }\n\n    updateTime = (event) => {\n        this.setState({\n            [event.target.name]: Number(event.target.value)\n        });\n        this.timer.current.setTime(Number(event.target.value) * 60000);\n        this.timer.current.start();\n        this.timer.current.stop();\n        this.populateCanvas();\n    }\n\n    updateWindowWidth = (event) => {\n        this.windowWidth = Number(event.target.value);\n        this.ppcm = Math.max(\n            document.body.scrollWidth,\n            document.documentElement.scrollWidth,\n            document.body.offsetWidth,\n            document.documentElement.offsetWidth,\n            document.documentElement.clientWidth\n        ) / this.windowWidth;\n        console.log(this.ppcm * this.distance / 100);\n        this.setState({ delta: Math.round(this.ppcm * this.distance / 100)});\n    }\n\n    updateDistance = (event) => {\n        this.distance = Number(event.target.value);\n        this.setState({ delta: Math.round(this.ppcm * this.distance / 100)});\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <canvas ref=\"canvas\" width=\"1000\" height=\"500\"></canvas>\n                <br />\n                <div>\n                    <font color=\"white\">BO {this.state.bo} MAX {this.state.max} TIME\n                        <Timer\n                            ref={this.timer}\n                            initialTime={this.state.time * 60000}\n                            direction=\"backward\"\n                            startImmediately={false}\n                            checkpoints={[{\n                                    time: 0,\n                                    callback: () => {\n                                        this.beep(100, 300, 1000);\n                                        var today=new Date().toISOString().slice(0, 10);\n                                        if (!(today in this.progress) || this.state.max > this.progress[today]) {\n                                            this.progress[today] = this.state.max;\n                                            cookies.set('progress', JSON.stringify(this.progress));\n                                        }\n                                    }\n                            }]}\n                        >\n                            {() => (\n                                <React.Fragment>\n                                    <Timer.Minutes /> m <Timer.Seconds /> s\n                                </React.Fragment>\n                            )}\n                        </Timer><br />\n                        <i>[i]nstructions, [c]onfiguration, [p]rogress</i>\n                    </font>\n                </div>\n                <Modal\n                    isOpen={this.state.instructionsOpen}\n                    onRequestClose={() => {\n                            this.setState({instructionsOpen: false});\n                    }}\n                    contentLabel=\"Instructions\"\n                >\n                    INSTRUCTIONS\n                </Modal>\n                <Modal\n                    isOpen={this.state.progressOpen}\n                    onRequestClose={() => {\n                            this.setState({progressOpen: false});\n                    }}\n                    contentLabel=\"Progress\"\n                >\n                    PROGRESS <br />\n                    {JSON.stringify(this.progress)}\n                </Modal>\n                <Modal\n                    isOpen={this.state.configurationOpen}\n                    onRequestClose={() => {\n                            this.persistCookies();\n                            this.setState({configurationOpen: false});\n                    }}\n                    contentLabel=\"Configuration\"\n                >\n                    CONFIGURATION <br />\n                    <form>\n                        <label>\n                            Width of window (cm):\n                            <input\n                                name=\"windowWidth\"\n                                type=\"number\"\n                                defaultValue={this.windowWidth}\n                                onBlur={this.updateWindowWidth} />\n                        </label><br />\n                        <label>\n                            Distance to screen (cm):\n                            <input\n                                name=\"distance\"\n                                type=\"number\"\n                                defaultValue={this.distance}\n                                onBlur={this.updateDistance} />\n                        </label><br />\n                        <label>\n                            Height of square (px):\n                            <input\n                                name=\"height\"\n                                type=\"number\"\n                                defaultValue={this.state.height}\n                                onBlur={this.handleInputChange} />\n                        </label><br />\n                        <label>\n                            Height of offset square (px):\n                            <input\n                                name=\"smallLength\"\n                                type=\"number\"\n                                defaultValue={this.state.smallLength}\n                                onBlur={this.handleInputChange} />\n                        </label><br />\n                        <label>\n                            Shift of offset square (px):\n                            <input\n                                name=\"shift\"\n                                type=\"number\"\n                                defaultValue={this.state.shift}\n                                onBlur={this.handleInputChange} />\n                        </label><br />\n                        <label>\n                            Time per session (minutes):\n                            <input\n                                name=\"time\"\n                                type=\"number\"\n                                defaultValue={this.state.time}\n                                onBlur={this.updateTime} />\n                        </label>\n                    </form>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}